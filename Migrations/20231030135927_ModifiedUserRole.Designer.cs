// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RitzpaStockExchange.Data;

#nullable disable

namespace RitzpaStockExchange.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231030135927_ModifiedUserRole")]
    partial class ModifiedUserRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RitzpaStockExchange.Models.UserAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyAfter")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyBefore")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Stock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserActions");
                });

            modelBuilder.Entity("RitzpaStockExchange.Models.UserStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("StockId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.HasIndex("UserId");

                    b.ToTable("UserStocks");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.Command", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BuyStockName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CommandType")
                        .HasColumnType("int");

                    b.Property<int>("CommandWay")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentStockRate")
                        .HasColumnType("int");

                    b.Property<string>("InitiatorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellStockName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("BuyStockName");

                    b.HasIndex("InitiatorId");

                    b.HasIndex("SellStockName");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.Stock", b =>
                {
                    b.Property<string>("StockName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("TradeCycle")
                        .HasColumnType("int");

                    b.HasKey("StockName");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Buyer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StockPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockName");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("HashSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PrevMoney")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cashMoney")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RitzpaStockExchange.Models.UserAction", b =>
                {
                    b.HasOne("Ritzpa_Stock_Exchange.Models.User", "User")
                        .WithMany("UserActions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RitzpaStockExchange.Models.UserStock", b =>
                {
                    b.HasOne("Ritzpa_Stock_Exchange.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ritzpa_Stock_Exchange.Models.User", "User")
                        .WithMany("UserStocks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.Command", b =>
                {
                    b.HasOne("Ritzpa_Stock_Exchange.Models.Stock", "BuyStock")
                        .WithMany("Buys")
                        .HasForeignKey("BuyStockName");

                    b.HasOne("Ritzpa_Stock_Exchange.Models.User", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId");

                    b.HasOne("Ritzpa_Stock_Exchange.Models.Stock", "SellStock")
                        .WithMany("Sells")
                        .HasForeignKey("SellStockName");

                    b.Navigation("BuyStock");

                    b.Navigation("Initiator");

                    b.Navigation("SellStock");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.Trade", b =>
                {
                    b.HasOne("Ritzpa_Stock_Exchange.Models.Stock", "Stock")
                        .WithMany("Trades")
                        .HasForeignKey("StockName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.Stock", b =>
                {
                    b.Navigation("Buys");

                    b.Navigation("Sells");

                    b.Navigation("Trades");
                });

            modelBuilder.Entity("Ritzpa_Stock_Exchange.Models.User", b =>
                {
                    b.Navigation("UserActions");

                    b.Navigation("UserStocks");
                });
#pragma warning restore 612, 618
        }
    }
}
